
---- Packages in PL_SQL ---- 

I packege sono pacchetti che racchiudono oggetti, che possono essere funzioni, procedure, variabili, ecc, viste ecc...

E' suddiviso in due parti:
  - Package Specification: Le specifiche contengono la parte pubblica del package, quindi accessibile a tutte le applicazioni. Il body, invece, nasconde la parte implementativa, le variabili e gli oggetti privati.  

- Package Body or Definition: Parte di oggetti nascosta non accessibile da tutti  i  pubblici.

Tutti gli oggetti inseriti in "package specicication" sono chiamati oggetti pubblici, qualsiasi sottoprogramma, che non si trova nel package specification ma codificato nel package body viene chiamato come oggetto privato.

//********* Esempio di una PACKAGE *********
"
CREATE PACKAGE cust_sal AS 
   PROCEDURE find_sal(c_id customers.id%type); 
END cust_sal; 
/
"

Ha come vataggi:
  1. - Modularità: ragruppare oggetti in relazione fra loro, rendendo così più facile la lettura del codice.
  2. - Information Hiding: Possibilità di distiguere fra metodi privati e metodi pubblici, la parte implementativa risiede nel body quindi nascosta al resto del programma.
  3. - Progettazione: possibile definire e compilare le specifiche anche in assenza di body. 
  4. - Condivisione: i valori delle variabili e dei cursori definiti nel package sono persistenti per tutta la durata della sessione.
  5. - Performance: la prima volta che viene richiamato un oggetto, l’intero package viene caricato in memoria, le chiamate successive, quindi, non causeranno accessi al disco, velocizzando cosi’ l’esecuzione.
  
  
  ---- Package Body -----
  
  - Con la clausola "CREATE PACKAGE BODY" posso creare un package body.
 
 Esempio di sintassi:
 
 CREATE OR REPLACE PACKAGE BODY cust_sal AS  

"   
PROCEDURE find_sal(c_id customers.id%TYPE) IS 
   c_sal customers.salary%TYPE; 
BEGIN 
      SELECT salary INTO c_sal 
      FROM customers 
      WHERE id = c_id; 
      dbms_output.put_line('Salary: '|| c_sal); 
   END find_sal; 
END cust_sal; 
/
"

E' possibile utilizzare un pacchetto con la seguente sintassi:
    package_name.element_name;

"
DECLARE 
   code customers.id%type := &cc_id; 
BEGIN 
   cust_sal.find_sal(code); 
END; 
/
"

  - E' richiamare il nome di una funzione con la seguente sintassi:
 
DECLARE 
   code customers.id%type := &cc_id; 
BEGIN 
   cust_sal.find_sal(code); 
END; 
/ 

"
CREATE OR REPLACE PACKAGE c_package AS 
   -- Adds a customer 
   PROCEDURE addCustomer(c_id   customers.id%type, 
   c_name  customerS.No.ame%type, 
   c_age  customers.age%type, 
   c_addr customers.address%type,  
   c_sal  customers.salary%type); 
   
   -- Removes a customer 
   PROCEDURE delCustomer(c_id  customers.id%TYPE); 
   --Lists all customers 
   PROCEDURE listCustomer; 
  
END c_package; 
/
"


